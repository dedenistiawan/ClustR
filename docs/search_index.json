[["1-pd.html", "1 Pendahuluan", " 1 Pendahuluan body{ text-align: justify} “Why is that when one man builds a wall, the next needs to to know what’s on the other side?” – Tyrion Lannister-Game of Thrones R adalah bahasa pemrograman dan perangkat lunak yang dirancang khusus untuk keperluan analisis data, pengolahan statistik, dan visualisasi. Bahasa ini menawarkan fleksibilitas untuk menulis kode guna menjalankan berbagai metode analisis statistik, mulai dari deskriptif hingga prediktif. Sebagai perangkat lunak, R menyediakan lingkungan interaktif untuk eksplorasi data, pengolahan, serta pembuatan laporan yang informatif. R pertama kali dikembangkan pada awal 1990-an oleh Ross Ihaka dan Robert Gentleman di University of Auckland, Selandia Baru. Proyek ini terinspirasi oleh bahasa pemrograman S yang dikembangkan oleh John Chambers di Bell Laboratories. Pada tahun 1995, R dirilis sebagai perangkat lunak open source, sehingga memungkinkan pengembang di seluruh dunia untuk berkontribusi dalam pengembangannya. Sejak itu, R berkembang pesat dengan ribuan paket yang tersedia di CRAN (Comprehensive R Archive Network) serta repositori lainnya. Dukungan komunitas dan kontribusi aktif dari pengembang di seluruh dunia telah menjadikan R sebagai bahasa yang terus berevolusi untuk memenuhi kebutuhan analisis data modern. R memiliki salah satu komunitas pengguna paling aktif di dunia. Komunitas ini terdiri dari akademisi, peneliti, praktisi industri, hingga pengembang perangkat lunak. Forum diskusi seperti RStudio Community, Stack Overflow, dan mailing list R membantu pengguna menyelesaikan masalah serta berbagi ide. Ekosistem R terus berkembang dengan adanya RStudio sebagai Integrated Development Environment (IDE) yang populer, serta berbagai konferensi seperti useR! yang mempertemukan pengguna R dari seluruh dunia. Selain itu, repositori paket seperti CRAN dan Bioconductor menyediakan ribuan alat tambahan untuk berbagai kebutuhan analisis.Dukungan komunitas yang besar, dokumentasi yang melimpah, dan ketersediaan sumber daya membuat R menjadi alat yang mudah diakses oleh pemula sekaligus sangat berguna bagi pengguna tingkat lanjut. R adalah perangkat lunak open source yang sepenuhnya gratis untuk digunakan oleh siapa saja. Tidak seperti beberapa perangkat lunak statistik lainnya yang membutuhkan biaya lisensi mahal, R memberikan fleksibilitas bagi pengguna untuk mendownload, menginstal, dan memodifikasi kode sumbernya tanpa batasan. Hal ini menjadikan R pilihan ideal bagi akademisi, peneliti, dan praktisi yang ingin menghemat biaya sekaligus mendapatkan alat analisis data yang andal. R dirancang khusus untuk analisis statistik dan pengolahan data, dengan dukungan bawaan untuk berbagai metode analisis, mulai dari deskriptif hingga prediktif. Kemampuan ini diperkuat dengan pustaka visualisasi yang sangat kaya seperti ggplot2, lattice, dan plotly, yang memungkinkan pengguna membuat grafik berkualitas tinggi. R tidak hanya membantu menganalisis data tetapi juga memvisualisasikannya dengan cara yang interaktif dan estetis, sehingga dapat menggali wawasan yang lebih dalam. Ekosistem R sangat kaya dengan ribuan pustaka atau paket tambahan yang tersedia di CRAN (Comprehensive R Archive Network), Bioconductor, dan repositori lainnya. Paket-paket ini mencakup berbagai bidang aplikasi, seperti analisis genetik, analisis spasial, pengolahan teks, hingga machine learning. Dengan pustaka ini, pengguna dapat dengan mudah memperluas fungsi R untuk memenuhi kebutuhan spesifik mereka tanpa harus menulis kode dari awal. R dapat diintegrasikan dengan berbagai bahasa pemrograman lain, seperti Python, C++, Java, dan SQL. Kompatibilitas ini memungkinkan pengguna untuk menggabungkan kekuatan masing-masing bahasa dalam satu proyek. Misalnya, pengguna dapat memanfaatkan Python untuk preprocessing data skala besar, kemudian menggunakan R untuk analisis statistik mendalam dan visualisasi. Selain itu, R juga mendukung integrasi dengan berbagai perangkat lunak lain seperti Excel, Tableau, dan Power BI, membuatnya menjadi bagian penting dalam alur kerja data modern. R telah menjadi alat yang sangat populer di berbagai bidang, berkat fleksibilitasnya dalam menangani analisis data. Beberapa bidang utama yang banyak memanfaatkan R antara lain: Statistik: R digunakan untuk berbagai jenis analisis statistik, seperti uji hipotesis, analisis regresi, dan analisis multivariat. Ilmu Data: R digunakan untuk eksplorasi data, pembuatan model prediktif, dan pengolahan data besar. Biologi dan Bioinformatika: Paket seperti Bioconductor memungkinkan analisis data genomik dan proteomik. Ekonomi dan Keuangan: R digunakan untuk analisis time series, pemodelan risiko, dan optimasi portofolio. Ilmu Sosial: R membantu dalam analisis survei, data panel, dan analisis konten. R dirancang khusus untuk analisis statistik, membuatnya menjadi salah satu alat terbaik untuk keperluan ini. Selain itu, R menyediakan banyak metode untuk data mining, seperti clustering, classification, dan association rule mining. Dukungan pustaka seperti caret untuk pembelajaran mesin dan tm untuk analisis teks menjadikan R alat yang sangat andal dalam penggalian data (data mining) dan pengolahan data tidak terstruktur. Selain itu, paket bookdown menjadi alat utama dalam proyek ini. Paket ini berbasis rmarkdown dan memberikan kemudahan untuk membuat dokumen yang menarik, seperti halaman web interaktif, e-book, dan laporan dalam format PDF. Dengan fitur yang memungkinkan integrasi antara teks, kode, dan hasil analisis, bookdown sangat cocok digunakan untuk pembelajaran dan dokumentasi ilmiah. Dengan menggunakan alat ini, kami menyusun sebuah buku berjudul Analisis Cluster dengan R: Panduan Lengkap untuk Pemula. Buku ini dirancang sebagai panduan interaktif yang menggabungkan teori, kode, dan hasil analisis dalam satu kesatuan. Tujuannya adalah menyediakan bahan belajar elektronik yang dapat diakses di berbagai platform, sehingga pembaca dapat memahami teori sekaligus mempraktikkan analisis data secara langsung. Buku ini diharapkan menjadi panduan lengkap bagi pemula untuk mempelajari analisis cluster dengan pendekatan yang mudah dipahami dan terstruktur. Setiap bab dalam buku ini dilengkapi dengan latihan pemrograman interaktif menggunakan R. Latihan-latihan ini dirancang untuk melengkapi contoh kode yang menunjukkan penerapan teknik-teknik yang dibahas. Latihan dibuat dengan menggunakan DataCamp light widget yang terhubung langsung ke sesi R yang dikelola oleh server DataCamp. Melalui pendekatan ini, pembaca dapat langsung mencoba dan bereksperimen dengan latihan yang disediakan, sehingga pemahaman mereka terhadap metode yang dipelajari dapat lebih mendalam. Kami berharap metode ini dapat memberikan pengalaman belajar yang menyeluruh dan menarik, terutama bagi pembaca yang ingin mempelajari analisis cluster menggunakan R secara praktis. Widget ini terdiri dari dua tab. Tab pertama, script.R, berfungsi seperti file dengan format .R, yang umum digunakan untuk menyimpan kode R. Baris yang diawali dengan tanda # merupakan komentar, yang tidak dihitung sebagai kode oleh R. Tab script.R ini berfungsi seperti lembar latihan, di mana Anda dapat menuliskan solusi Anda. Setelah menulis kode, Anda bisa menekan tombol Run untuk menjalankannya. Sistem akan menguji kebenaran solusi yang Anda buat dan memberi tahu apakah solusi tersebut benar. Jika salah, Anda akan mendapatkan umpan balik berupa saran atau petunjuk perbaikan. Tab kedua, R Console, adalah konsol R yang sepenuhnya berfungsi, yang memungkinkan Anda mencoba solusi terlebih dahulu sebelum mengirimkannya. Anda juga bisa mengirimkan hampir semua kode R ke konsol untuk bereksperimen dan mengeksplorasi lebih lanjut. Cukup ketikkan perintah dan tekan Enter untuk menjalankannya. Pada konsol, Anda akan melihat simbol &gt; di panel kanan (konsol). Simbol ini disebut “prompt” dan menandakan bahwa pengguna dapat mulai memasukkan kode untuk dijalankan. Agar tidak membingungkan, simbol ini tidak akan ditampilkan di buku ini. Output yang dihasilkan oleh kode R akan diberi komentar dengan #&gt;. Biasanya, kami menampilkan kode R bersama dengan output yang dihasilkan dalam satu potongan kode. Sebagai contoh, perhatikan baris kode berikut yang ditampilkan dalam potongan di bawah ini. Kode ini memberi perintah kepada R untuk menghitung jumlah paket yang tersedia di CRAN. Potongan kode tersebut diikuti oleh output yang dihasilkan. # Cek jumlah paket R yang tersedia di CRAN nrow(available.packages(repos = &quot;http://cran.us.r-project.org&quot;)) #&gt; [1] 21834 Setiap potongan kode dilengkapi dengan tombol di sisi kanan yang memungkinkan Anda menyalin kode ke clipboard. Fitur ini mempermudah pekerjaan dengan segmen kode yang lebih besar, baik di versi R/RStudio Anda maupun di widget-widget yang ada di sepanjang buku ini. Pada widget di atas, Anda bisa mengklik tab R Console dan mengetikkan perintah nrow(available.packages(repos = \"http://cran.us.r-project.org\")) (perintah dari potongan kode di atas), lalu menjalankannya dengan menekan tombol Enter pada keyboard Anda. Setiap potongan kode dilengkapi dengan tombol di sisi kanan luar yang memungkinkan Anda menyalin kode ke clipboard Anda. Ini membuat pekerjaan dengan segmen kode yang lebih besar menjadi lebih nyaman, baik di versi R/RStudio Anda maupun di widget-widget yang disajikan di sepanjang buku ini. Pada widget di atas, Anda dapat mengklik tab R Console Console dan mengetikkan nrow(available.packages(repos = \"http://cran.us.r-project.org\")) (perintah dari potongan kode di atas) dan menjalankannya dengan menekan tombol Enter pada keyboard Anda. 1 Sesi R akan diinisialisasi dengan mengklik widget. Proses ini mungkin memakan waktu beberapa detik. Cukup tunggu hingga indikator di samping tombol Run berubah menjadi hijau.↩︎ "],["1.1-kolofon.html", "1.1 Kolofon", " 1.1 Kolofon Buku ini ditulis menggunakan bookdown di dalam RStudio. Seluruh kode sumbernya dapat diakses di GitHub. #&gt; ─ Session info ─────────────────────────────────────────────────────────────── #&gt; setting value #&gt; version R version 4.4.0 (2024-04-24 ucrt) #&gt; os Windows 11 x64 (build 22631) #&gt; system x86_64, mingw32 #&gt; ui RTerm #&gt; language (EN) #&gt; collate English_Indonesia.utf8 #&gt; ctype English_Indonesia.utf8 #&gt; tz Asia/Jakarta #&gt; date 2025-01-04 #&gt; pandoc 3.2 @ C:/Program Files/RStudio/resources/app/bin/quarto/bin/tools/ (via rmarkdown) #&gt; #&gt; ─ Packages ─────────────────────────────────────────────────────────────────── #&gt; package * version date (UTC) lib source #&gt; bookdown 0.39 2024-04-15 [1] CRAN (R 4.4.0) #&gt; bslib 0.7.0 2024-03-29 [1] CRAN (R 4.4.0) #&gt; cachem 1.1.0 2024-05-16 [1] CRAN (R 4.4.0) #&gt; cli 3.6.2 2023-12-11 [1] CRAN (R 4.4.0) #&gt; digest 0.6.35 2024-03-11 [1] CRAN (R 4.4.0) #&gt; evaluate 1.0.1 2024-10-10 [1] CRAN (R 4.4.2) #&gt; fastmap 1.2.0 2024-05-15 [1] CRAN (R 4.4.0) #&gt; htmltools 0.5.8.1 2024-04-04 [1] CRAN (R 4.4.0) #&gt; jquerylib 0.1.4 2021-04-26 [1] CRAN (R 4.4.0) #&gt; jsonlite 1.8.8 2023-12-04 [1] CRAN (R 4.4.0) #&gt; knitr 1.47 2024-05-29 [1] CRAN (R 4.4.0) #&gt; lifecycle 1.0.4 2023-11-07 [1] CRAN (R 4.4.0) #&gt; R6 2.5.1 2021-08-19 [1] CRAN (R 4.4.0) #&gt; rlang 1.1.4 2024-06-04 [1] CRAN (R 4.4.0) #&gt; rmarkdown 2.27 2024-05-17 [1] CRAN (R 4.4.0) #&gt; rstudioapi 0.16.0 2024-03-24 [1] CRAN (R 4.4.0) #&gt; sass 0.4.9 2024-03-15 [1] CRAN (R 4.4.0) #&gt; sessioninfo 1.2.2 2021-12-06 [1] CRAN (R 4.4.2) #&gt; xfun 0.49 2024-10-31 [1] CRAN (R 4.4.1) #&gt; yaml 2.3.8 2023-12-11 [1] CRAN (R 4.4.0) #&gt; #&gt; [1] C:/Users/Deden/AppData/Local/R/win-library/4.4 #&gt; [2] C:/Program Files/R/R-4.4.0/library #&gt; #&gt; ────────────────────────────────────────────────────────────────────────────── Berikut adalah library yang digunakan dalam buku ini: "],["1.2-pengenalan-singkat-r-and-rstudio.html", "1.2 Pengenalan Singkat R and RStudio", " 1.2 Pengenalan Singkat R and RStudio body{ text-align: justify} Instalasi R dan RStudio Untuk memulai menggunakan R, langkah pertama adalah menginstal perangkat lunaknya. Berikut langkah-langkah instalasinya: Buka situs resmi CRAN (Comprehensive R Archive Network) di https://cran.r-project.org. Pilih sistem operasi yang digunakan (Windows, macOS, atau Linux). Unduh file instalasi dan ikuti instruksi instalasinya. Unduh dan Instal RStudio Setelah R terinstal, unduh RStudio, sebuah Integrated Development Environment (IDE) untuk R, dari https://www.rstudio.com. Pilih versi gratis (RStudio Desktop) dan instal sesuai dengan sistem operasi Anda. RStudio adalah IDE yang dirancang khusus untuk mempermudah penggunaan R. Dibandingkan dengan antarmuka dasar R, RStudio menawarkan pengalaman pengguna yang lebih nyaman melalui fitur-fitur berikut: Script Editor: Memungkinkan penulisan dan pengelolaan skrip dengan mudah. Console: Tempat menjalankan perintah R secara langsung. Environment Pane: Menampilkan variabel, data, dan objek yang sedang aktif. Plots Pane: Menampilkan hasil visualisasi seperti grafik dan plot. Packages Pane: Memudahkan instalasi dan pengelolaan pustaka. Gambar 1.1: RStudio: empat panel CRAN (Comprehensive R Archive Network) adalah repositori resmi yang menyimpan ribuan paket tambahan untuk memperluas fungsi R. Paket-paket ini mencakup berbagai bidang aplikasi, seperti statistik, visualisasi, dan machine learning. Untuk mengunduh dan menginstal paket di R, langkah-langkahnya adalah sebagai berikut: Buka RStudio dan pastikan Anda terhubung ke internet. Gunakan perintah install.packages() untuk menginstal library atau paket. Setelah instalasi selesai, muat paket ke dalam sesi kerja menggunakan perintah library(). Contoh: library(ggplot2) Paket yang diunduh akan otomatis tersimpan di komputer Anda dan dapat digunakan kapan saja tanpa perlu mengunduh ulang. Dengan CRAN, pengguna dapat dengan mudah menyesuaikan R untuk berbagai kebutuhan analisis data. Dasar-Dasar R Seperti disebutkan sebelumnya, buku ini bukan dimaksudkan sebagai pengantar R, melainkan panduan tentang cara memanfaatkan kemampuannya untuk aplikasi yang umum analisis cluster dengan R. Pembaca yang memiliki pengetahuan dasar tentang pemrograman R mungkin akan merasa nyaman untuk langsung memulai dari Bab 2. Namun, bagian ini ditujukan bagi mereka yang belum pernah bekerja dengan R atau RStudio sebelumnya. Jika Anda setidaknya sudah tahu cara membuat objek dan memanggil fungsi, Anda bisa melewati bagian ini. Objek dan Variabel Dalam R, objek adalah entitas yang menyimpan data atau hasil perhitungan. Objek bisa berupa angka, teks, tabel, atau bahkan fungsi. Setiap objek di R memiliki nama yang digunakan untuk merujuknya dalam kode, dan objek ini dapat disimpan ke dalam variabel untuk memudahkan manipulasi data. Variabel adalah nama yang diberikan untuk menyimpan nilai atau objek. Variabel di R tidak memerlukan deklarasi tipe data sebelumnya, yang berarti kita dapat langsung menyimpan nilai apapun ke dalam variabel tersebut. Variabel dapat dibuat dengan cara memberi nama pada objek dan menggunakan operator penugasan &lt;- untuk menyimpan nilai ke dalam variabel. x &lt;- 5 # Menyimpan angka 5 dalam variabel x nama &lt;- &quot;John&quot; # Menyimpan string &quot;John&quot; dalam variabel nama Di atas, x dan nama adalah variabel yang menyimpan objek berupa angka dan teks. Mengakses Variabel Setelah variabel dibuat, kita dapat mengakses nilai yang tersimpan dalam variabel tersebut dengan cukup menyebutkan nama variabel: print(x) # Output: 5 #&gt; [1] 5 print(nama) # Output: &quot;John&quot; #&gt; [1] &quot;John&quot; Tipe Data dalam Variabel Variabel di R dapat menyimpan berbagai tipe data, antara lain: Numerik: Menyimpan angka dengan atau tanpa desimal. Karakter (String): Menyimpan teks. Logika: Menyimpan nilai TRUE atau FALSE. Faktor: Digunakan untuk variabel kategorikal. Daftar (List), Vektor, Matriks, dan Data Frame: Struktur data kompleks yang menyimpan koleksi data. Contoh variabel dengan berbagai tipe data: angka &lt;- 10 # Numerik nama &lt;- &quot;Andi&quot; # Karakter status &lt;- TRUE # Logika kategori &lt;- factor(c(&quot;A&quot;, &quot;B&quot;, &quot;A&quot;, &quot;C&quot;)) # Faktor Operasi dengan Variabel Operasi dengan Variabel Variabel dapat digunakan dalam operasi matematika dan logika. Misalnya, jika kita memiliki dua variabel a dan b, kita bisa melakukan operasi penjumlahan: a &lt;- 3 b &lt;- 4 hasil &lt;- a + b # Menyimpan hasil penjumlahan a dan b ke dalam variabel hasil print(hasil) # Output: 7 #&gt; [1] 7 Menimpa dan Mengubah Nilai Variabel x &lt;- 5 # x sekarang bernilai 5 x &lt;- 10 # x sekarang bernilai 10 (nilai sebelumnya akan tertimpa) print(x) # Output: 10 #&gt; [1] 10 Struktur Data pada R R menyediakan berbagai jenis struktur data untuk mengelola dan memanipulasi data dalam berbagai bentuk. Pemahaman tentang struktur data di R sangat penting karena memungkinkan kita untuk menyimpan dan bekerja dengan data yang lebih kompleks. Beberapa struktur data dasar yang tersedia di R meliputi vektor, matriks, data frame, dan list. Vektor Vektor adalah struktur data paling dasar di R. Vektor adalah sekumpulan elemen yang memiliki tipe data yang sama, seperti angka, karakter, atau logika. Vektor dapat dibuat menggunakan fungsi c(), yang berarti combine atau concatenate. Contoh pembuatan vektor: vektor_angka &lt;- c(1, 2, 3, 4, 5) # Vektor angka vektor_karakter &lt;- c(&quot;A&quot;, &quot;B&quot;, &quot;C&quot;) # Vektor karakter vektor_logika &lt;- c(TRUE, FALSE, TRUE) # Vektor logika Mengakses elemen vektor: vektor_angka[1] # Mengakses elemen pertama (1) #&gt; [1] 1 vektor_karakter[2] # Mengakses elemen kedua (&quot;B&quot;) #&gt; [1] &quot;B&quot; Vektor bisa berupa vektor numerik, vektor karakter, atau vektor logika, tergantung tipe data elemen yang ada di dalamnya. Matriks Matriks adalah struktur data dua dimensi, yang berarti memiliki baris dan kolom. Semua elemen dalam matriks harus memiliki tipe data yang sama, seperti vektor. Contoh pembuatan matriks: matriks &lt;- matrix(1:6, nrow = 2, ncol = 3) # Matriks 2x3 dengan elemen dari 1 hingga 6 print(matriks) #&gt; [,1] [,2] [,3] #&gt; [1,] 1 3 5 #&gt; [2,] 2 4 6 Data Frame Data frame adalah struktur data yang lebih kompleks dan sering digunakan dalam analisis data. Data frame terdiri dari kolom-kolom yang dapat memiliki tipe data yang berbeda (numerik, karakter, logika, dll.), mirip dengan tabel dalam basis data atau spreadsheet. Contoh pembuatan data frame: df &lt;- data.frame( Nama = c(&quot;John&quot;, &quot;Alice&quot;, &quot;Bob&quot;), Umur = c(25, 30, 22), Status = c(&quot;Single&quot;, &quot;Married&quot;, &quot;Single&quot;) ) print(df) #&gt; Nama Umur Status #&gt; 1 John 25 Single #&gt; 2 Alice 30 Married #&gt; 3 Bob 22 Single List List adalah struktur data yang paling fleksibel di R. List dapat menyimpan berbagai jenis objek yang berbeda dalam satu struktur data, termasuk vektor, matriks, data frame, atau bahkan fungsi. Contoh pembuatan list: daftar &lt;- list( Nama = &quot;John&quot;, Umur = 25, Nilai = c(90, 85, 88) ) print(daftar) #&gt; $Nama #&gt; [1] &quot;John&quot; #&gt; #&gt; $Umur #&gt; [1] 25 #&gt; #&gt; $Nilai #&gt; [1] 90 85 88 Vektor Faktor adalah tipe data di R yang digunakan untuk menyimpan data kategorikal. Faktor menyimpan data dalam bentuk level yang dapat digunakan untuk analisis kategorikal, seperti dalam model regresi atau analisis statistik lainnya. Contoh pembuatan faktor: status &lt;- factor(c(&quot;Single&quot;, &quot;Married&quot;, &quot;Single&quot;, &quot;Divorced&quot;)) print(status) #&gt; [1] Single Married Single Divorced #&gt; Levels: Divorced Married Single Berikut adalah perbandingan antara berbagai struktur data di R: Struktur Data Deskripsi Contoh Penggunaan Vektor Sekumpulan elemen dengan tipe data yang sama Menyimpan data numerik atau karakter Matriks Struktur dua dimensi (baris dan kolom) Menyimpan data dalam bentuk tabel numerik Data Frame Tabel dua dimensi dengan tipe data berbeda Menyimpan data observasi dan variabel List Koleksi elemen dengan tipe data yang berbeda Menyimpan objek dengan tipe data campuran Faktor Data kategorikal dengan level yang terbatas Mengelompokkan data kategorikal Fungsi dan Pemrograman di R R menyediakan berbagai cara untuk mendefinisikan dan menggunakan fungsi dalam pemrograman. Fungsi adalah blok kode yang dirancang untuk melakukan tugas tertentu, menerima input, dan memberikan output. Pemrograman berbasis fungsi memungkinkan pengguna untuk menulis kode yang lebih modular dan terstruktur, yang memudahkan pemeliharaan dan pengembangan program. Definisi Fungsi Fungsi di R dibuat menggunakan kata kunci function(). Fungsi ini dapat menerima satu atau lebih argumen dan menghasilkan nilai output. Contoh pembuatan fungsi: # Fungsi untuk menghitung kuadrat suatu angka kuadrat &lt;- function(x) { return(x^2) # Mengembalikan nilai kuadrat dari x } Pemanggilan fungsi hasil &lt;- kuadrat(5) # Memanggil fungsi &#39;kuadrat&#39; dengan argumen 5 print(hasil) # Output: 25 #&gt; [1] 25 Argumen fungsi Fungsi di R dapat menerima berbagai jenis argumen, yang bisa berupa variabel, nilai tetap, atau objek lain. Argumen juga bisa diberikan nilai default, yang berarti fungsi tetap dapat dipanggil meskipun beberapa argumen tidak diberikan nilai. Contoh argumen dengan nilai default: # Fungsi untuk menghitung hasil pembagian bagi &lt;- function(a, b = 2) { return(a / b) # Jika b tidak diberikan, akan menggunakan nilai default 2 } print(bagi(10)) # Output: 5 (10 dibagi 2) #&gt; [1] 5 print(bagi(10, 5)) # Output: 2 (10 dibagi 5) #&gt; [1] 2 Fungsi dengan Beberapa Nilai Kembalian Fungsi di R dapat mengembalikan lebih dari satu nilai. Salah satu cara untuk melakukan ini adalah dengan menggunakan list. Fungsi dapat mengembalikan objek yang lebih kompleks, seperti list, untuk menyimpan beberapa hasil sekaligus. Contoh fungsi dengan beberapa nilai kembalian: hasil_operasi &lt;- function(a, b) { hasil_penjumlahan &lt;- a + b hasil_perkalian &lt;- a * b return(list(penjumlahan = hasil_penjumlahan, perkalian = hasil_perkalian)) } output &lt;- hasil_operasi(4, 5) print(output$penjumlahan) # Output: 9 #&gt; [1] 9 print(output$perkalian) # Output: 20 #&gt; [1] 20 Fungsi Bawaan di R R menyediakan banyak fungsi bawaan untuk melakukan berbagai tugas, seperti manipulasi data, analisis statistik, dan visualisasi. Fungsi-fungsi ini sangat berguna dan sering digunakan dalam berbagai analisis. Contoh fungsi bawaan: # Fungsi untuk menghitung rata-rata rata_rata &lt;- mean(c(1, 2, 3, 4, 5)) # Output: 3 print(rata_rata) #&gt; [1] 3 Fungsi Anonim Fungsi anonim adalah fungsi yang tidak memiliki nama. Fungsi jenis ini sering digunakan dalam operasi sementara atau dalam konteks tertentu, seperti dalam operasi dengan apply atau pemrograman berbasis vektor. Contoh fungsi anonim: # Menggunakan fungsi anonim dalam apply angka &lt;- c(1, 2, 3, 4, 5) hasil &lt;- sapply(angka, function(x) x^2) # Menerapkan fungsi untuk menghitung kuadrat print(hasil) # Output: 1 4 9 16 25 #&gt; [1] 1 4 9 16 25 Semua perintah yang telah dijelaskan di atas juga dapat digunakan pada widget interaktif di seluruh buku ini. Anda dapat mencobanya di bawah ini. "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
